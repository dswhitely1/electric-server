// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
    id          Int         @default(autoincrement()) @id
    username    String      @unique
    password    String
    role        Role        @default(USER)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    profile     Profile?
    employment  Employment[]
    education   Education[]
    references  Reference[]
}

model Profile {
    id              Int             @default(autoincrement()) @id
    firstName       String
    middleName      String?
    lastName        String
    preferredName   String?
    address         Address[]
    availability    Availability[]
    referredBy      String
    desiredPay      String
    position        String
    startDate       DateTime        @default(now())
    authorized      Boolean         @default(false)
    underAge        Boolean         @default(false)
    permit          Permit          @default(NA)
    user            User            @relation(fields: [userId], references: [id])
    userId          Int             @unique
}

model Address {
    id              Int         @default(autoincrement()) @id
    label           String
    address         String
    address1        String?
    city            String
    state           String
    zipCode         String
    profile         Profile     @relation(fields: [profileId], references: [id])
    profileId       Int
}

model Availability {
    id          Int                 @default(autoincrement()) @id
    available   AvailabilityEnum    @default(FULLTIME)
    Profile     Profile             @relation(fields: [profileId], references: [id])
    profileId   Int
}

model Employment {
    id          Int                 @default(autoincrement()) @id
    companyName String
    cityState   String
    phoneNumber String
    supervisor  String
    startDate   DateTime
    endDate     DateTime?
    contact     Boolean             @default(false)
    user        User                @relation(fields: [userId], references: [id])
    userId      Int
}

model Education {
    id          Int                 @default(autoincrement()) @id
    schoolName  String
    subject     String
    graduate    Boolean             @default(true)
    received    String
    user        User                @relation(fields: [userId], references: [id])
    userId      Int
}

model Reference {
    id              Int                 @default(autoincrement()) @id
    name            String
    relationship    String
    years           String
    phoneNumber     String
    user            User                @relation(fields: [userId], references: [id])
    userId          Int
}

model Message {
    id              Int                 @default(autoincrement()) @id
    firstName       String
    lastName        String
    contact         String
    subject         String
    message         String
    read            Boolean             @default(false)
}

enum Role {
    USER
    ADMIN
}

enum AvailabilityEnum {
    FULLTIME
    PARTTIME
    TEMPORARY
    WEEKDAYS
    WEEKENDS
    EVENINGS
    NIGHTS
}

enum Permit {
    YES
    NO
    NA
}